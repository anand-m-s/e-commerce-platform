
<%-include("./partials/header")  %>

<%-include("./partials/navigation")  %>

<div>

  <div class=" mt-1" style="display: flex; justify-content: space-around; align-items: center; height: 2rem;">
    <div>
      <div class="dropdown">
        <a class="btn dropdown-toggle  " href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Categories
        </a>      
        <ul class="dropdown-menu dropdownselect  secondary-nav">
          <% categories.forEach(category => { %>
              <li class="d-flex justify-content-center catogory__li">
                  <a class="categoryfilter"  href="#" data-category-id="<%= category._id %>">
                      <%= category.categoryName %>
                  </a>
              </li>
          <% }); %>
      </ul>      
    </div>
    
   
    </div>
    <p class="secondary-nav" >filter</p>
    <p class="secondary-nav" >sort</p>
  </div>

  
  <!--  carousel-->
  <div class="carousel_style">
  
    <div id="carouselExampleAutoplaying" class="carousel slide " data-bs-ride="carousel">
      <div class="carousel-inner ">
        <div class="carousel-item active">
          <img src="/images/d5a2a6481656bb58 (1).webp" class="d-block w-100 carousel_style" alt="...">
        </div>
        <div class="carousel-item">
          <img src="/images/89a97ae7c718bee4.webp" class="d-block w-100 carousel_style" alt="...">
        </div>
    
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>
  </div>
  <!-- Carousel -->

  <section >
    <div class="container ">
      <div class="row index-row" id="productRow">
        <% products.forEach(product => { %>
          <div class="col-md-8 col-lg-6 col-xl-3 card-main p-3">
            <div class="card card-div-product ">
              <div class="imgdiv mt-2">
                <a href="/products?productId=<%= product._id %>">
                  <img  src="/images/uploads/<%= product.ProductImage[0].filename %>" class="card-img-top" alt="<%= product.Name %>" />
                </a>
              </div>
              <div class="card-body">
                <div class="text-center">
                  <h3 class="card-title capitalize" style="margin-bottom: 15px;"><%= product.Name %></h3>
               
                </div>
                <div>
                  <div class="d-flex justify-content-around">
                    <h5><%= product.Brand %></h5>
                    <h6>₹<%= product.Price %></h6>
                  </div>
                </div>
                <div class="d-flex justify-content-around  mt-1">
                  <% if (product.Stock === 0) { %>
                    <p class="text-danger">Out of Stock</p>
                  <% } else { %>
                    
                    <button class="btn addtocart" onclick="addToCart('<%= product._id %>')">Add to cart</button>
                    
                    <!-- <button class="btn buynow">Buy now</button> -->
                    <% } %>
                  </div>
                  <div class="d-flex justify-content-center"  id="message-container-<%= product._id %>">
                    <p></p>
                  </div>
                </div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </section>
</div>
  


<%-include("./partials/footer")  %> 
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
  function addToCart(productId){
    const message = document.querySelector(`#message-container-${productId}`);
    fetch(`/addproductstocart?productId=${productId}`,{
      method:'POST',
      headers: {
        'Content-Type':'application/json',        
      },
    }).then(response=>{
      if(response.status===200){
        message.innerHTML = "Product added successfully";
        message.style.color="green";
        setTimeout(() => {
          message.innerHTML="";
        }, 1000);
      }else if(response.status===208){  
        message.innerHTML="Product already in cart";
        message.style.color="red";
        setTimeout(() => {
          message.innerHTML="";
        }, 1000);
      }
    
    }).catch(error=>{
      console.error("error adding products to cart:",error)
    });
  }
//  search results
  document.addEventListener('DOMContentLoaded', function() {
      // Get the search button element
      const searchButton = document.getElementById('searchButton');
      const searchInput = document.getElementById('searchInput');
      function performSearch() {
        var searchTerm = searchInput.value.trim();
        if (searchTerm !== '') {       
          window.location.href = '/search?query=' + searchTerm;
        }
      }
        
        searchButton.addEventListener('click', performSearch);
  searchInput.addEventListener('keypress', function(event) {
    if (event.keyCode === 13) {
      performSearch();
    }
  });
    });
    // frontend JavaScript
const categoryDropdown = document.querySelector('.dropdownselect');

categoryDropdown.addEventListener('click', async (event) => {
    if (event.target.tagName === 'A') {
        event.preventDefault();
        const categoryId = event.target.dataset.categoryId;
        const url = `/categoryfilter?id=${categoryId}`;

        try {
            const response = await fetch(url);
            const filteredProducts = await response.json();
            // Update the DOM with the filtered products, e.g., replace the current product list.
            updateProductList(filteredProducts);
        } catch (error) {
            console.error('Error fetching filtered products:', error);
        }
    }
});

function updateProductList(products) {
    const productRow = document.getElementById('productRow');

    // Clear existing products in the product row
    productRow.innerHTML = '';

    // Iterate through the new products and add them to the product row
    products.forEach(product => {
        const productCol = document.createElement('div');
        productCol.classList.add('col-md-8', 'col-lg-6', 'col-xl-3', 'card-main', 'p-3');

        const productCard = document.createElement('div');
        productCard.classList.add('card', 'card-div-product');

        const imgDiv = document.createElement('div');
        imgDiv.classList.add('imgdiv', 'mt-2');

        const productLink = document.createElement('a');
        productLink.href = `/products?productId=${product._id}`;

        const productImage = document.createElement('img');
        productImage.src = `/images/uploads/${product.ProductImage[0].filename}`;
        productImage.classList.add('card-img-top');
        productImage.alt = product.Name;

        productLink.appendChild(productImage);
        imgDiv.appendChild(productLink);

        const cardBody = document.createElement('div');
        cardBody.classList.add('card-body');

        const titleDiv = document.createElement('div');
        titleDiv.classList.add('text-center');

        const title = document.createElement('h3');
        title.classList.add('card-title', 'capitalize');
        title.style.marginBottom = '15px';
        title.textContent = product.Name;

        titleDiv.appendChild(title);

        const detailsDiv = document.createElement('div');
        detailsDiv.classList.add('d-flex', 'justify-content-around');

        const brand = document.createElement('h5');
        brand.textContent = product.Brand;

        const price = document.createElement('h6');
        price.textContent = `₹${product.Price}`;

        detailsDiv.appendChild(brand);
        detailsDiv.appendChild(price);

        const stockDiv = document.createElement('div');
        stockDiv.classList.add('d-flex', 'justify-content-around', 'mt-1');

        if (product.Stock === 0) {
            const outOfStock = document.createElement('p');
            outOfStock.classList.add('text-danger');
            outOfStock.textContent = 'Out of Stock';
            stockDiv.appendChild(outOfStock);
        } else {
            const addToCartBtn = document.createElement('button');
            addToCartBtn.classList.add('btn', 'addtocart');
            addToCartBtn.setAttribute('onclick', `addToCart('${product._id}')`);
            addToCartBtn.textContent = 'Add to cart';

            stockDiv.appendChild(addToCartBtn);
        }

        const messageContainer = document.createElement('div');
        messageContainer.classList.add('d-flex', 'justify-content-center');
        messageContainer.id = `message-container-${product._id}`;
        const message = document.createElement('p');

        messageContainer.appendChild(message);

        cardBody.appendChild(titleDiv);
        cardBody.appendChild(detailsDiv);
        cardBody.appendChild(stockDiv);
        cardBody.appendChild(messageContainer);

        productCard.appendChild(imgDiv);
        productCard.appendChild(cardBody);

        productCol.appendChild(productCard);
        productRow.appendChild(productCol);
    });
}



  







</script>

<%-include("./partials/end")  %> 
